{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf600
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red38\green38\blue38;\red255\green255\blue255;\red0\green0\blue0;
\red255\green255\blue255;\red148\green6\blue75;\red245\green245\blue245;\red14\green114\blue164;\red19\green36\blue126;
\red101\green71\blue146;}
{\*\expandedcolortbl;\csgray\c100000;\cssrgb\c20000\c20000\c20000;\cssrgb\c100000\c100000\c100000;\cssrgb\c0\c0\c0\c3922;
\csgray\c100000;\cssrgb\c65490\c11373\c36471;\cssrgb\c96863\c96863\c96863;\cssrgb\c0\c52549\c70196;\cssrgb\c9412\c21176\c56863;
\cssrgb\c47451\c36471\c63922;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid1\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid2\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\paperw11900\paperh16840\margl1440\margr1440\vieww14160\viewh18000\viewkind0
\deftab720
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0
\f0\fs32 \cf2 \cb3 {\listtext	1	}\expnd0\expndtw0\kerning0
What other context(s) can we get when calling 
\f1\fs27\fsmilli13600 \cb4 getContext()
\f0\fs32 \cb3  on a Canvas element?\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls1\ilvl1\cf2 \cb5 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8259 	}When you write getContext(webgl) you will get an object epresenting a three dimensional rendering context. The same with getcontext(webgl2) just the second version. getContext(bitmaprenderer) will create a imageBitmapRenderingcontext which replaces the content of the canvas with a given ImageBitmap.\expnd0\expndtw0\kerning0
\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 {\listtext	2	}\expnd0\expndtw0\kerning0
How would you create a blue circle using the Canvas element? Explain with words or code.\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls1\ilvl1\cf2 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8259 	}\expnd0\expndtw0\kerning0
<canvas id="circle" width="700" height="500"></canvas>\
\ls1\ilvl1\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8259 	}\expnd0\expndtw0\kerning0
<script>\
\ls1\ilvl1\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8259 	}\expnd0\expndtw0\kerning0
var ele = document.getElementById("circle");\
\ls1\ilvl1\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8259 	}\expnd0\expndtw0\kerning0
var circle = ele.getContext("2d");\
\ls1\ilvl1\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8259 	}\expnd0\expndtw0\kerning0
circle.beginPath();\
\ls1\ilvl1\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8259 	}\expnd0\expndtw0\kerning0
circle.arc(100, 100, 20, 0, 2*Math.PI);\
\ls1\ilvl1\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8259 	}\expnd0\expndtw0\kerning0
circle.stroke();\
\ls1\ilvl1\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8259 	}\expnd0\expndtw0\kerning0
circle.fillStyle = "blue";\
\ls1\ilvl1\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8259 	}\expnd0\expndtw0\kerning0
circle.fill();\
\ls1\ilvl1\kerning1\expnd0\expndtw0 {\listtext	\uc0\u8259 	}\expnd0\expndtw0\kerning0
</script>\
\pard\tx220\tx720\tx1133\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf2 \kerning1\expnd0\expndtw0 {\listtext	3	}\cf2 \cb3 \expnd0\expndtw0\kerning0
What is a more terse (also known as shorter) way of writing the loop in the following using the 
\f1\fs27\fsmilli13600 \cb4 Array.filter
\f0\fs32 \cb3  method?\cf2 \cb3 \
\pard\tx566\pardeftab720\partightenfactor0
\cf2 \
\pard\pardeftab720\partightenfactor0

\f1\fs27\fsmilli13600 \cf6 \cb7 const\cf2  \cf8 countries\cf2  \cf6 =\cf2  [\cf9 'Norway'\cf2 , \cf9 'Sweden'\cf2 ,  \cf9 'Denmark'\cf2 , \cf9 'New Zealand'\cf2 ];\
\cf6 const\cf2  \cf8 countriesStartingWithN\cf2  \cf6 =\cf2  [];\
\
\cf6 for\cf2  (\cf6 let\cf2  i \cf6 =\cf2  \cf8 0\cf2 ; i \cf6 <\cf2  countries.\cf8 length\cf2 ; i\cf6 ++\cf2 ) \{\
  \cf6 let\cf2  country \cf6 =\cf2  countries[i];\
  \cf6 if\cf2  (country.\cf10 startsWith\cf2 (\cf9 'N'\cf2 )) \{\
    countriesStartingWithN.\cf8 push\cf2 (country);\
  \}\
\}
\f0\fs32 \cf2 \cb3 \
\
const countries = ['Norway', 'Sweden',  'Denmark', 'New Zealand'];\
\
function checkStartN(countries) \{\
  return countries.startsWith("N")\
\}\
\
countries.filter(checkStartN);}